name: Thesis Statistics Tracker
on:
  push:
  workflow_dispatch:
jobs:
  track-thesis-stats:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            texlive-full \
            texlive-extra-utils \
            texlive-latex-extra \
            texlive-science \
            texlive-fonts-recommended \
            texlive-fonts-extra \
            texlive-bibtex-extra \
            latexmk \
            biber \
            poppler-utils \
            ghostscript
      - name: Create temporary directory for counting
        run: |
          # Create a temporary directory for our counting version
          mkdir -p temp_thesis
          # Copy everything except the temp directory itself
          rsync -av --exclude 'temp_thesis' . temp_thesis/
          # Create all necessary subdirectories for aux files
          cd temp_thesis
          find . -type d -exec mkdir -p {} \;
          # Ensure write permissions for all directories
          chmod -R 777 .
      - name: Compile full LaTeX document
        run: |
          # Initial run to generate aux files
          pdflatex -interaction=nonstopmode -shell-escape thesis.tex || true
          # Run bibtex on main file and chapters
          bibtex thesis || true
          for d in ./*/ ; do
            [ -f "$d"/*.aux ] && bibtex "$d"/*.aux || true
          done
          # Additional runs to resolve references
          pdflatex -interaction=nonstopmode -shell-escape thesis.tex || true
          pdflatex -interaction=nonstopmode -shell-escape thesis.tex || true
      - name: Count words and pages
        run: |
          cd temp_thesis
          # Count words using texcount
          WORD_COUNT=$(texcount -total -inc thesis.tex | grep "Words in text" | awk '{print $4}')
          # Count pages by analyzing the PDF
          PAGE_COUNT=$(pdfinfo thesis.pdf | grep "Pages" | awk '{print $2}')
          # Get current timestamp
          TIMESTAMP=$(date -u "+%Y-%m-%d %H:%M:%S UTC")
          # Create or append to statistics file in the main directory
          echo "$TIMESTAMP | Words: $WORD_COUNT | Pages: $PAGE_COUNT" >> ../thesis_statistics.txt
          # Save compiled thesis in main directory
          mv thesis.pdf ../thesis.pdf
          cd ..
          rm -rf temp_thesis
      - name: Commit and push statistics and thesis
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add thesis_statistics.txt
          git add thesis.pdf
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update thesis statistics and thesis.pdf [skip ci]"
            git push origin HEAD:${{ github.ref }}
          fi